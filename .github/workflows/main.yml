name: GameCI Template ðŸŽ®

on: push

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
jobs:
  testRunner:
    name: Test in ${{ matrix.testMode }} âœ¨
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        testMode:
          - EditMode
          - PlayMode
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v3
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard
      - name: Restore Library cache
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-test-project-${{ matrix.targetPlatform }}
          restore-keys: |
            Library-test-project-
            Library-
      - uses: game-ci/unity-test-runner@v2.0-alpha-5
        id: testRunner
        with:
          testMode: ${{ matrix.testMode }}
          checkName: ${{ matrix.testMode }} test results
          githubToken: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/upload-artifact@v2
        with:
          name: Test results (${{ matrix.testMode }})
          path: ${{ steps.testRunner.outputs.artifactsPath }}

  buildForAndroidPlatform:
     name: Build For Android Platform
     runs-on: ubuntu-latest
     steps:
       - uses: actions/checkout@v3
       - uses: actions/cache@v3
         with:
           path: Library
           key: Library-Android
       - uses: game-ci/unity-builder@v2
         with:
           targetPlatform: Android
           androidAppBundle: true
           androidKeystoreName: user.keystore
           androidKeystoreBase64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
           androidKeystorePass: ${{ secrets.ANDROID_KEYSTORE_PASS }}
           androidKeyaliasName: ${{ secrets.ANDROID_KEYALIAS_NAME }}
           androidKeyaliasPass: ${{ secrets.ANDROID_KEYALIAS_PASS }}
       - uses: actions/upload-artifact@v2
         with:
           name: build-Android
           path: build/Android

  releaseToGooglePlay:
        name: Release to the Google Play Store
        runs-on: ubuntu-latest
        needs: buildForAndroidPlatform
        env:
          GOOGLE_PLAY_KEY_FILE: ${{ secrets.GOOGLE_PLAY_KEY_FILE }}
          GOOGLE_PLAY_KEY_FILE_PATH: ${{ format('{0}/fastlane/google-fastlane.json', github.workspace) }}
          ANDROID_BUILD_FILE_PATH: ${{ format('{0}/build/Android/Android.aab', github.workspace) }}
          ANDROID_PACKAGE_NAME: ${{ secrets.ANDROID_PACKAGE_NAME }}
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v3
        - name: Download Android Artifact
          uses: actions/download-artifact@v2
          with:
           name: build-Android
           path: build/Android
        - name: Add Authentication
          run: echo "$GOOGLE_PLAY_KEY_FILE" > $GOOGLE_PLAY_KEY_FILE_PATH
        - name: Install Fastlane
          uses: ruby/setup-ruby@v1
          with:
           ruby-version: 2.7.2
           bundler-cache: true
        - name: Upload to Google Play beta
          uses: maierj/fastlane-action@v2.0.1
          with:
           lane: 'android beta'
        - name: Cleanup to avoid storage limit
          if: always()
          uses: geekyeggo/delete-artifact@v1
          with:
           name: build-Android   
